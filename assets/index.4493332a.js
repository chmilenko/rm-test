import{L as U,u as V,r as g,G as D,t as u,v as p,x as c,B as S,y as C,M as w,N as $,O as k,P as N,o as L,Q as P,_ as R,R as x,c as b,S as j,T as f,U as E,z as G,V as B,C as O,D as A}from"./entry.5d3fbd6f.js";const I=U("rm-store",{state:()=>({data:{},charactersInfo:[],page:1,oneEpisode:{},oneCharacter:{},location:{},pagination:20}),actions:{async fetchData(){const t=await fetch("https://rickandmortyapi.com/api/",{method:"GET"});this.data=await t.json()},async getCharacters(t){const o=new URL(this.data.characters),s={page:this.page};o.search=new URLSearchParams(s).toString();const r=await(await fetch(o,{method:"GET"})).json();if(setTimeout(()=>{this.charactersInfo=[...this.charactersInfo,...r.results]},1e3),t)for(let e=0;e<t.length;e++){const n=this.charactersInfo.filter(i=>i.id===t[e].split("/").pop());await this.getCharacter(n),setTimeout(()=>{this.charactersInfo=[...this.charactersInfo,this.oneCharacter]},1e3)}},async fetchNextPage(){this.page++,await this.getCharacters()}}});function q(){const t=V();return{navigate:async(s,a,r)=>{try{let e=s;s.length>1&&(e=s.split("/").pop()),await r(e),t.push(`${a}-${e}`)}catch(e){console.error(e)}}}}const z={class:"character-card"},F={class:"params-btn"},H=["src"],Q={class:"character-name"},J=c("span",null,"Name:",-1),K={class:"character-species"},W=c("span",null,"Species:",-1),X=c("p",{class:"participation-intro"},"Participation in episodes,",-1),Y={class:"episode-character"},Z=c("label",{for:"select-episode"},"Search Episode:",-1),ee=c("option",{value:"",disabled:"",selected:""},"Please select...",-1),te=["value"],se={__name:"CharacterCard",props:{character:{type:Object,required:!0}},setup(t){const o=I(),{navigate:s}=q(),a=g(null),r=i=>s(i,"/episode",o.getEpisode),e=i=>s(i,"/character",o.getCharacter),n=()=>{a.value!==null&&r(a.value)};return D(a,i=>{i===null&&(a.value="")}),(i,_)=>{var l,d,m,h,y;return u(),p("div",z,[c("button",F,[c("img",{alt:"avatar",src:(l=t.character)==null?void 0:l.image,onClick:_[0]||(_[0]=()=>e(t.character.id)),сlass:"image-character"},null,8,H)]),c("h2",Q,[J,S(" "+C((d=t.character)==null?void 0:d.name),1)]),c("h3",K,[W,S(" "+C((m=t.character)==null?void 0:m.species),1)]),X,c("div",Y,[Z,w(c("select",{id:"select-episode","onUpdate:modelValue":_[1]||(_[1]=v=>a.value=v),onChange:n},[ee,(u(!0),p(k,null,N((y=(h=t.character)==null?void 0:h.episode)==null?void 0:y.slice(0,5),(v,T)=>(u(),p("option",{key:v,value:v}," Episode "+C(T+1),9,te))),128))],544),[[$,a.value]])])])}}},ae=se,ce={__name:"Intersect",emits:["intersect"],setup(t,{emit:o}){const s={root:null,rootMargin:"50px",threshold:1},a=o,r=g(null);let e;return L(()=>{e=new IntersectionObserver(([n])=>{n&&n.isIntersecting&&a("intersect")},s),r.value&&e.observe(r.value)}),P(()=>{e&&e.disconnect()}),(n,i)=>(u(),p("div",{ref_key:"observerElement",ref:r,class:"observer"},null,512))}},oe=ce;const M=t=>(O("data-v-86e14321"),t=t(),A(),t),ne={class:"filters"},re=M(()=>c("option",null,"Human",-1)),ie=M(()=>c("option",null,"Alien",-1)),le=[re,ie],he={class:"charactersBlock"},_e={__name:"CharactersBlock",async setup(t){let o,s;const a=I();[o,s]=x(()=>a.fetchData()),await o,s(),[o,s]=x(()=>a.getCharacters()),await o,s();const r=b(()=>a.charactersInfo),e=g(""),n=g([]),i=b(()=>r.value.filter(_=>{const l=_.name.toLowerCase().includes(e.value.toLowerCase()),d=n.value.length===0||n.value.includes(_.species);return l&&d}));return(_,l)=>{const d=ae,m=oe;return u(),p("div",null,[c("div",ne,[w(c("input",{placeholder:"Name search","onUpdate:modelValue":l[0]||(l[0]=h=>E(e)?e.value=h:null)},null,512),[[j,f(e)]]),w(c("select",{multiple:"","onUpdate:modelValue":l[1]||(l[1]=h=>E(n)?n.value=h:null)},le,512),[[$,f(n)]])]),c("div",he,[(u(!0),p(k,null,N(f(i),h=>(u(),B(d,{key:h.id,character:h},null,8,["character"]))),128)),G(m,{onIntersect:f(a).fetchNextPage},null,8,["onIntersect"])])])}}},ue=R(_e,[["__scopeId","data-v-86e14321"]]),pe={__name:"index",async setup(t){let o,s;const a=I();return[o,s]=x(()=>a.fetchData()),await o,s(),(r,e)=>{const n=ue;return u(),B(n)}}};export{pe as default};
